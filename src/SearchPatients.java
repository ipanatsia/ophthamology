
import java.util.Collections;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchPatients.java
 *
 * Created on 31 Ιαν 2009, 12:14:21 μμ
 */

/**
 *
 * @author User
 */
public class SearchPatients extends javax.swing.JInternalFrame {
    //Η κλαση αυτή είναι ένα πανελ που αναζητάει ασθενής με βάση
    //την πάθηση που δηλώνει ο γιατρός
    /** Creates new form SearchPatients */
    private Patients patients;
    public SearchPatients() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setTitle("Αναζήτηση Ασθενών");

        jLabel1.setText("Όνομα Πάθησης");
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Αναζήτηση");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ασθενής", "Ονομασία Πάθησης", "Σχετικότητα"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Κλείσιμο");
        jButton2.setName("jButton2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Όταν ο χρήστης ζητήσει αναζήτηση
        //Ανακτούνται όλες οι ασθένεις, όλων των ασθενών
        //και αξιολογούνται με βάση το όνομα που έχει δηλώσει ο χρήστης
        //(χρησιμοποιείται η συνάρτηση compareTo()) και παροσυιάζονται στο χρήστη
        //με βάση τη συνάφεια.
        String toSearch = jTextField1.getText();
        if(patients.getPatients().size()==0)
            return;
        Vector<RetrievedItem> results = new Vector();
        Enumeration<Patient> patEnumeration = patients.getPatients().elements();
        while(patEnumeration.hasMoreElements())
        {
            Patient patient = patEnumeration.nextElement();
            if (patient.getDiseases()!=null) {
                DiseaseProgress [] diseases = patient.getDiseases();
                String pName = "" + patient.getSurname() + " " + patient.getName();
                for(int i = 0; i < diseases.length; i++)
                {
                    RetrievedItem item = new RetrievedItem();
                    item.patient = pName;
                    item.diseaseName = diseases[i].getDisease().getDiseaseName();
                    item.relevance = toSearch.compareTo(item.diseaseName);
                    if(item.relevance <0) item.relevance *=-1;
                    results.addElement(item);
                }

            }
        }
        Collections.sort(results,new Comparer());
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        while(model.getRowCount() >0)
            model.removeRow(0);
        for(int i = 0; i < results.size(); i++)
        {
            Object [] row = new Object[3];
            row[0] = results.get(i).patient;
            row[1] = results.get(i).diseaseName;
            row[2] = ""+(100 -results.get(i).relevance);
            model.addRow(row);
        }
        jTable1.setModel(model);
        

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the patients
     */
    public /** Creates new form SearchPatients */
    Patients getPatients() {
        return patients;
    }

    /**
     * @param patients the patients to set
     */
    public void setPatients(Patients patients) {
        this.patients = patients;
    }
    class RetrievedItem
    {
        public String patient, diseaseName;
        public int relevance;
    }

    class Comparer implements Comparator
    {

        public int compare(Object o1, Object o2) {
            RetrievedItem r1 = (RetrievedItem)o1;
            RetrievedItem r2 = (RetrievedItem)o2;
            return (r1.relevance - r2.relevance);
        }

    }
}
